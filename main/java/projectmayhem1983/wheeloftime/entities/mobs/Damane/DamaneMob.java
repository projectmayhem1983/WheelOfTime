// Date: 12/21/2015 6:49:48 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package projectmayhem1983.wheeloftime.entities.mobs.Damane;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class DamaneMob extends ModelBase
{
  //fields
    ModelRenderer head2;
    ModelRenderer body2;
    ModelRenderer rightarm2;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg2;
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm2;
    ModelRenderer rightleg2;
    ModelRenderer leftleg;
    ModelRenderer Chain;
  
  public DamaneMob()
  {
    textureWidth = 64;
    textureHeight = 128;
    
      head2 = new ModelRenderer(this, 0, 0);
      head2.addBox(-4F, -8F, -4F, 8, 8, 8);
      head2.setRotationPoint(0F, 0F, 0F);
      head2.setTextureSize(64, 128);
      head2.mirror = true;
      setRotation(head2, 0F, 0F, 0F);
      body2 = new ModelRenderer(this, 16, 16);
      body2.addBox(-4F, 0F, -2F, 8, 12, 4);
      body2.setRotationPoint(0F, 0F, 0F);
      body2.setTextureSize(64, 128);
      body2.mirror = true;
      setRotation(body2, 0F, 0F, 0F);
      rightarm2 = new ModelRenderer(this, 40, 16);
      rightarm2.addBox(-3F, -2F, -2F, 4, 12, 4);
      rightarm2.setRotationPoint(-5F, 2F, 0F);
      rightarm2.setTextureSize(64, 128);
      rightarm2.mirror = true;
      setRotation(rightarm2, 0F, 0F, 0F);
      leftarm = new ModelRenderer(this, 40, 48);
      leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftarm.setRotationPoint(-12F, 2F, 28F);
      leftarm.setTextureSize(64, 128);
      leftarm.mirror = true;
      setRotation(leftarm, -1.07818F, 0F, 0F);
      rightleg = new ModelRenderer(this, 0, 48);
      rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      rightleg.setRotationPoint(-19F, 12F, 28F);
      rightleg.setTextureSize(64, 128);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg2 = new ModelRenderer(this, 0, 16);
      leftleg2.addBox(-2F, 0F, -2F, 4, 12, 4);
      leftleg2.setRotationPoint(2F, 12F, 0F);
      leftleg2.setTextureSize(64, 128);
      leftleg2.mirror = true;
      setRotation(leftleg2, 0F, 0F, 0F);
      head = new ModelRenderer(this, 0, 32);
      head.addBox(-4F, -8F, -4F, 8, 8, 8);
      head.setRotationPoint(-17F, 0F, 28F);
      head.setTextureSize(64, 128);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 16, 48);
      body.addBox(-4F, 0F, -2F, 8, 12, 4);
      body.setRotationPoint(-17F, 0F, 28F);
      body.setTextureSize(64, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 40, 48);
      rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
      rightarm.setRotationPoint(-22F, 2F, 28F);
      rightarm.setTextureSize(64, 128);
      rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0F);
      leftarm2 = new ModelRenderer(this, 40, 16);
      leftarm2.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftarm2.setRotationPoint(5F, 2F, 0F);
      leftarm2.setTextureSize(64, 128);
      leftarm2.mirror = true;
      setRotation(leftarm2, 0F, 0F, 0F);
      rightleg2 = new ModelRenderer(this, 0, 16);
      rightleg2.addBox(-2F, 0F, -2F, 4, 12, 4);
      rightleg2.setRotationPoint(-2F, 12F, 0F);
      rightleg2.setTextureSize(64, 128);
      rightleg2.mirror = true;
      setRotation(rightleg2, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 48);
      leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      leftleg.setRotationPoint(-15F, 12F, 28F);
      leftleg.setTextureSize(64, 128);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      Chain = new ModelRenderer(this, 0, 65);
      Chain.addBox(0F, 0F, 0F, 1, 1, 23);
      Chain.setRotationPoint(0F, 0F, 2F);
      Chain.setTextureSize(64, 128);
      Chain.mirror = true;
      setRotation(Chain, -0.1858931F, -0.4833219F, 0.3717861F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head2.render(f5);
    body2.render(f5);
    rightarm2.render(f5);
    leftarm.render(f5);
    rightleg.render(f5);
    leftleg2.render(f5);
    head.render(f5);
    body.render(f5);
    rightarm.render(f5);
    leftarm2.render(f5);
    rightleg2.render(f5);
    leftleg.render(f5);
    Chain.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    float f6 = (180F / (float)Math.PI);
    this.head.rotateAngleX =f4 / (180F / (float)Math.PI);
    this.head.rotateAngleY =f3 / (180F / (float)Math.PI);
    
    this.leftleg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F *f1;
    this.rightleg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    
        this.rightarm.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        
        
        this.head2.rotateAngleX =f4 / (180F / (float)Math.PI);
        this.head2.rotateAngleY =f3 / (180F / (float)Math.PI);
        
        this.leftleg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F *f1;
        this.rightleg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        
        this.leftarm2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F *f1;
        this.rightarm2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
  }

}
